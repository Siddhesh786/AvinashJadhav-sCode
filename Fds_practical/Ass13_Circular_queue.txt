#include <iostream>
#define MAX 5
using namespace std;

class cqueuepizza{
    int q[MAX], rear, front;

public:
    cqueuepizza();
    bool isEmpty();
    bool isFull();
    void Enquque(int);
    int Dequeue();
    void display();
};

cqueuepizza::cqueuepizza() {
    front = rear = -1;
}

bool cqueuepizza::isEmpty(){
	return (front == -1);
}

bool cqueuepizza::isFull(){
	return ((front==0 && rear==MAX-1) || (rear + 1 == front ));
}
	
	
void cqueuepizza::Enquque(int value) {
    if (isFull()){
        cout << "\nQueue is Full! can not enqueue element "<<value<<endl;
        
    } else {
    	if(front == -1){
    		front = rear = 0;
		}else if(rear == MAX-1){
			rear = 0;
		}else{
			rear++;
		}
		q[rear] = value;
        cout << "Order added at " << rear << endl;
    }
}

int cqueuepizza::Dequeue() {
    int value;
    if (front == -1) {
        cout << endl << "Queue is Empty! can not delete element"<<endl;
        return -1;
    } else {
        value = q[front];

        if(front == rear){
        	front = rear = -1;
		}else if(front == MAX-1){
			front = 0;
		}
		else{
			front++;
		}
        cout << "Order removed from " << front << endl;
        cout << "\nThe removed order is: " << value << endl;
    }
}

void cqueuepizza::display(){
	if(isEmpty()){
		cout<<"queue is Empty! no element present "<<endl;
		return;
	}
	else{
		int i = front;
		cout<<"orders : ";
		while(i != rear + 1){
			cout<<q[i]<<" ";
			i = (i+1) % MAX;
		}
		cout<<endl;
	}
}

int main() {
	
    int ch;    
    cqueuepizza q1;
    cout << "\n*****MENU*****";
    cout << "\n1. Place an order id ";
    cout << "\n2. Remove an order id ";
    cout << "\n3. Display the queue ";
    cout << "\n4. Exit";

    do {
        cout << "\nEnter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
            	int y;
                cout << "\nEnter the order id: ";
                cin >> y;
                q1.Enquque(y);
                break;

            case 2:
                q1.Dequeue();
                break;

            case 3:
                q1.display();
                break;
            
            case 4:
            	cout<<"Exiting from program...";

            default:
                cout << "\nWrong choice!!";
                break;
        }

    } while (ch != 4);

    return 0;
}