#include <iostream>
#define MAX 10
using namespace std;

class Queue {
    int queue[MAX];
    int front, rear;

public:
    Queue() {
        front = rear = -1;
    }

    int isempty();
    int isfull();
    void enqueue(int);
    int delqueue();
    void display();
};

int Queue::isempty() {
    return (front == -1);
}

int Queue::isfull() {
    return (rear == MAX - 1);
}

void Queue::enqueue(int x) {
    if (isfull()) {
        cout << "Queue is Overflow !!!\n\n";
    } else {
    	if(isempty()){
    		front = rear = 0;
		}else{
			rear++;
		}
        queue[rear] = x;
        cout<<x<<" Enqueue succesfully."<<endl;
    }
}

int Queue::delqueue() {
    if (isempty()) {
        cout << "Queue is Underflow !!!\n\n";
        return -1; 
    } else {
        int val = queue[front];
        
        if(front == rear){
        	front = rear = -1;
		}else{
            front ++;			
		}
        cout<<"\n Deleted Element = "<<val<<endl;
    }
}

void Queue::display() {
	if(isempty()){
		cout<<"Queue is Empty ! no ele present"<<endl;
		return;
	}
    cout << "\nQueue Contains: ";
    for (int i = front; i != rear+1; i++) {
        cout << queue[i] << " ";
    }
}

int main() {
    Queue obj;
    int ch, x;
            
    cout << "\n 1. Insert Job \n 2. Delete Job \n 3. Display \n 4. Exit \n ";

    do {
    	cout<<"\n\nEnter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                cout << "\n Enter the Data: ";
                cin >> x;
                obj.enqueue(x);
                break;

            case 2:
                obj.delqueue();;
                break;

            case 3:
                obj.display();
                break;

            case 4:
                cout << "\n Exit the Program...";
                break;

            default:
                cout << "\n Invalid choice! Please try again.";
                break;
        }
    } while (ch != 4);

    return 0;
}
